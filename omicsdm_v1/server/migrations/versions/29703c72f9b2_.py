"""empty message

Revision ID: 29703c72f9b2
Revises:
Create Date: 2022-05-27 14:25:20.039801

"""
from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision = "29703c72f9b2"
down_revision = None
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table(
        "datasets",
        sa.Column("id", sa.Integer(), autoincrement=True, nullable=False),
        sa.Column("project_id", sa.Integer(), nullable=False),
        sa.Column("dataset_id", sa.String(length=120), nullable=False),
        sa.Column("name", sa.String(length=120), nullable=True),
        sa.Column("private", sa.Boolean(), nullable=True),
        sa.Column("submitter_name", sa.String(length=120), nullable=False),
        sa.Column("submission_date", sa.DateTime(), nullable=False),
        sa.Column(
            "shared_with", postgresql.ARRAY(sa.Integer()), nullable=False
        ),
        sa.Column(
            "extra_cols",
            postgresql.JSONB(astext_type=sa.Text()),
            nullable=False,
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_table(
        "group",
        sa.Column("id", sa.Integer(), autoincrement=True, nullable=False),
        sa.Column("kc_groupname", sa.String(), nullable=False),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_table(
        "history",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("entity_id", sa.String(length=300), nullable=False),
        sa.Column("timestamp", sa.DateTime(), nullable=False),
        sa.Column("username", sa.String(length=120), nullable=False),
        sa.Column("groups", sa.String(length=300), nullable=False),
        sa.Column("endpoint", sa.String(length=1000), nullable=False),
        sa.Column("method", sa.String(length=120), nullable=False),
        sa.Column(
            "content", postgresql.JSONB(astext_type=sa.Text()), nullable=True
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_table(
        "projects",
        sa.Column("id", sa.Integer(), autoincrement=True, nullable=False),
        sa.Column("project_id", sa.String(), nullable=False),
        sa.Column("name", sa.String(), nullable=True),
        sa.Column("created_at", sa.DateTime(), nullable=True),
        sa.Column("last_updated_at", sa.DateTime(), nullable=True),
        sa.Column("last_updated_by", sa.String(), nullable=True),
        sa.Column("last_update", sa.String(), nullable=True),
        sa.Column("owners", postgresql.ARRAY(sa.Integer()), nullable=False),
        sa.Column(
            "extra_cols",
            postgresql.JSONB(astext_type=sa.Text()),
            nullable=False,
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_table(
        "dataset_group",
        sa.Column("dataset_id", sa.Integer(), nullable=False),
        sa.Column("group_id", sa.Integer(), nullable=False),
        sa.Column("owner", sa.Boolean(), nullable=True),
        sa.ForeignKeyConstraint(
            ["dataset_id"],
            ["datasets.id"],
        ),
        sa.ForeignKeyConstraint(
            ["group_id"],
            ["group.id"],
        ),
        sa.PrimaryKeyConstraint("dataset_id", "group_id"),
    )
    op.create_table(
        "files",
        sa.Column("id", sa.Integer(), autoincrement=True, nullable=False),
        sa.Column("dataset_id", sa.Integer(), nullable=False),
        sa.Column("name", sa.String(length=120), nullable=False),
        sa.Column("submitter_name", sa.String(length=120), nullable=False),
        sa.Column("submission_date", sa.DateTime(), nullable=False),
        sa.Column("version", sa.Integer(), nullable=False),
        sa.Column("enabled", sa.Boolean(), nullable=False),
        sa.Column("upload_finished", sa.Boolean(), nullable=False),
        sa.Column(
            "shared_with", postgresql.ARRAY(sa.Integer()), nullable=False
        ),
        sa.Column(
            "extra_cols",
            postgresql.JSONB(astext_type=sa.Text()),
            nullable=False,
        ),
        sa.ForeignKeyConstraint(
            ["dataset_id"],
            ["datasets.id"],
        ),
        sa.PrimaryKeyConstraint("id", "dataset_id"),
    )
    op.create_table(
        "project_dataset",
        sa.Column("project_id", sa.Integer(), nullable=False),
        sa.Column("dataset_id", sa.Integer(), nullable=False),
        sa.ForeignKeyConstraint(
            ["dataset_id"],
            ["datasets.id"],
        ),
        sa.ForeignKeyConstraint(
            ["project_id"],
            ["projects.id"],
        ),
        sa.PrimaryKeyConstraint("project_id", "dataset_id"),
    )
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table("project_dataset")
    op.drop_table("files")
    op.drop_table("dataset_group")
    op.drop_table("projects")
    op.drop_table("history")
    op.drop_table("group")
    op.drop_table("datasets")
    # ### end Alembic commands ###
